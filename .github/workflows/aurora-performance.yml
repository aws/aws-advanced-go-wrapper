name: Aurora Performance Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "*"

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  run-integration-tests:
    continue-on-error: true
    strategy:
      matrix:
        db: [mysql, pg]

    name: Run Aurora ${{ matrix.db }} container performance tests
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: 8

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24' 

      - name: Install dependencies
        run: go get .
      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: go_aurora_perf_tests
          role-duration-seconds: 43200
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          output-credentials: true

      - name: Run Integration Tests
        working-directory: ${{ github.workspace }}/test_framework/host
        run: |
          ./gradlew --no-parallel --no-daemon test-aurora-${{ matrix.db }}-performance --info
        env:
          RDS_DB_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
          AWS_SESSION_TOKEN: ${{ steps.creds.outputs.aws-session-token }}
          NUM_INSTANCES: 5
          AURORA_MYSQL_DB_ENGINE_VERSION: "default"
          AURORA_PG_DB_ENGINE_VERSION: "default"

      - name: Get Github Action IP
        if: always()
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Remove Github Action IP
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-name default \
            --protocol -1 \
            --port -1 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32 \
          2>&1 > /dev/null;

      - name: Archive Performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.db }}-performance-results
          path: ${{ github.workspace }}/test_framework/container/tests/reports
          retention-days: 5
